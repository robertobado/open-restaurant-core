<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>restaurant.core</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>open-restaurant-core Maven Webapp</name>
	<url>http://open-restaurant.googlecode.com</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<scala.version>2.9.1</scala.version>
		<org.springframework.version>3.1.0.RELEASE</org.springframework.version>
		<com.sun.jersey.version>1.11</com.sun.jersey.version>
		<junit.version>4.10</junit.version>
		<cglib.version>2.2.2</cglib.version>
	</properties>
	<licenses>
		<license>
			<name>Apache 2</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>manual</distribution>
		</license>
	</licenses>
	<issueManagement>
		<system>Google Code</system>
		<url>http://open-restaurant.googlecode.com</url>
	</issueManagement>
	<repositories>
		<repository>
			<id>m2.dev.java.net</id>
			<url>http://download.java.net/maven/2</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>glassfish.dev.java.net</id>
			<url>http://download.java.net/maven/glassfish</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>repository.springframework.maven.release</id>
			<name>Spring Framework Maven Release Repository</name>
			<url>http://maven.springframework.org/release</url>
		</repository>
	</repositories>
	<dependencies>
		<!-- Spring dependency start -->
		<dependency>
			<!-- Application Context (depends on core, expression, aop, beans) This 
				is the central artifact for Spring's Dependency Injection Container and is 
				generally always defined -->
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.context</artifactId>
			<version>${org.springframework.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<!-- Transaction Management Abstraction (depends on core, beans, aop, 
				context) Define this if you use Spring Transactions or DAO Exception Hierarchy 
				(org.springframework.transaction.*/org.springframework.dao.*) -->
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.transaction</artifactId>
			<version>${org.springframework.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
				and iBatis. (depends on core, beans, context, transaction) Define this if 
				you need ORM (org.springframework.orm.*) -->
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.orm</artifactId>
			<version>${org.springframework.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<!-- Web app development utilities common across Servlet/Portlet environments 
				(depends on core, beans, context) Define this if you use Spring MVC, or wish 
				to use Struts, JSF, or another web framework with Spring (org.springframework.web.*) -->
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web</artifactId>
			<version>${org.springframework.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<!-- Bean Factory and JavaBeans utilities (depends on core) Define this 
				if you use Spring Bean APIs (org.springframework.beans.*) -->
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.beans</artifactId>
			<version>${org.springframework.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<!-- Support for testing Spring applications with tools such as JUnit 
				and TestNG This artifact is generally always defined with a 'test' scope 
				for the integration testing framework and unit testing stubs -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- Aspect Oriented Programming (AOP) Framework (depends on core, beans) 
				Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.aop</artifactId>
			<version>${org.springframework.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<!-- Core utilities used by other modules. Define this if you use Spring 
				Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.core</artifactId>
			<version>${org.springframework.version}</version>
			<scope>compile</scope>
		</dependency>
		<!-- Spring dependency end -->
		<!-- CGLib dependency start -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>${cglib.version}</version>
			<scope>runtime</scope>
		</dependency>
		<!-- CGLib dependency end -->
		<!-- Servlet dependency start -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp.jstl</groupId>
			<artifactId>javax.servlet.jsp.jstl-api</artifactId>
			<version>1.2.1</version>
			<scope>provided</scope>
		</dependency>
		<!-- Servlet dependency end -->
		<!-- SLF4J dependency start -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.4</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.4</version>
			<scope>runtime</scope>
		</dependency>
		<!-- SLF4J dependency end -->
		<!-- Apache Commons dependency start -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.5</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<scope>compile</scope>
		</dependency>
		<!-- Apache Commons dependency end -->
		<!-- Jersey dependency start -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${com.sun.jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-spring</artifactId>
			<version>${com.sun.jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.jersey-test-framework</groupId>
			<artifactId>jersey-test-framework-grizzly</artifactId>
			<version>${com.sun.jersey.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Jersey dependency end -->
		<!-- Hibernate dependency start -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.0.0.Final</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.2.0.Final</version>
			<scope>compile</scope>
		</dependency>
		<!-- Hibernate dependency end -->
		<!-- HSQL JDBC Driver dependency start -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.2.6</version>
			<scope>compile</scope>
		</dependency>
		<!-- HSQL JDBC Driver dependency end -->
		<!-- PostgreSQL JDBC Driver dependency start -->
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.1-901.jdbc4</version>
		</dependency>
		<!-- PostgreSQL JDBC Driver dependency end -->
		<!-- JUnit dependency start -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- JUnit dependency end -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.1</version>
		</dependency>
	</dependencies>
	<build>
		<defaultGoal>package</defaultGoal>
		<finalName>open-restaurant-core</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>maven-jetty-plugin</artifactId>
					<version>6.1.15</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.1</version>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.1.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.8</version>
					<configuration>
						<classpathContainers>
							<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6</classpathContainer>
						</classpathContainers>
						<sourceExcludes>
							<sourceExclude>**/.hg/**</sourceExclude>
						</sourceExcludes>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>false</downloadJavadocs>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<filters>
			<filter>src/main/filters/build.properties</filter>
		</filters>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

	<groupId>net.openrally</groupId>
</project>
